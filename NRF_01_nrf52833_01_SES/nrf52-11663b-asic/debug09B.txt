


    #define NRF_ATFIFO_DEF(fifo_id, storage_type, item_cnt)                                     
        static storage_type NRF_ATFIFO_BUF_NAME(fifo_id)[(item_cnt)+1];                         
        NRF_LOG_INSTANCE_REGISTER(NRF_ATFIFO_LOG_NAME, fifo_id,                                 
                                  NRF_ATFIFO_CONFIG_INFO_COLOR,                                 
                                  NRF_ATFIFO_CONFIG_DEBUG_COLOR,                                
                                  NRF_ATFIFO_CONFIG_LOG_INIT_FILTER_LEVEL,                      
                                  NRF_ATFIFO_CONFIG_LOG_ENABLED ?                               
                                          NRF_ATFIFO_CONFIG_LOG_LEVEL : NRF_LOG_SEVERITY_NONE); 
        static nrf_atfifo_t NRF_ATFIFO_INST_NAME(fifo_id) = {                                   
                .p_buf = NULL,                                                                  
                NRF_LOG_INSTANCE_PTR_INIT(p_log, NRF_ATFIFO_LOG_NAME, fifo_id)                  
        };                                                                                      
        static nrf_atfifo_t * const fifo_id = &NRF_ATFIFO_INST_NAME(fifo_id)






============================================

typedef struct
{
    nrf_sortlist_item_t         list_item;     /**< Token used by sortlist. */
    uint64_t                    end_val;       /**< RTC counter value when timer expires or @ref APP_TIMER_IDLE_VAL. */
    uint32_t                    repeat_period; /**< Repeat period (0 if single shot mode). */
    app_timer_timeout_handler_t handler;       /**< User handler. */
    void *                      p_context;     /**< User context. */
    NRF_LOG_INSTANCE_PTR_DECLARE(p_log)        /**< Pointer to instance of the logger object (Conditionally compiled). */
} app_timer_t;






#define APP_TIMER_IDLE_VAL 0xFFFFFFFFFFFFFFFFULL
#define APP_TIMER_LOG_NAME app_timer

//#define ROUNDED_DIV(A, B)    (A + B /2) / B
  #define ROUNDED_DIV(A, B)     A/B + 1/2  

//#define APP_TIMER_TICKS(MS)   ROUNDED_DIV( MS * APP_TIMER_CLOCK_FREQ, 1000 * (APP_TIMER_CONFIG_RTC_FREQUENCY + 1) 
//  #define APP_TIMER_TICKS(MS)   ROUNDED_DIV( MS * 32768, 1000 * (0 + 1) )
    #define APP_TIMER_TICKS(MS)   ROUNDED_DIV( MS * 32768, 1000 ) 
    #define APP_TIMER_TICKS(MS)   MS * 32768/1000 + 1/2  


---

APP_TIMER_DEF(task_loop_timer_id);    //待理解

#define _APP_TIMER_DEF(timer_id)            
                                                   
    NRF_LOG_INSTANCE_REGISTER(APP_TIMER_LOG_NAME, timer_id,                                    
                              APP_TIMER_CONFIG_INFO_COLOR,                                     
                              APP_TIMER_CONFIG_DEBUG_COLOR,                                    
                              APP_TIMER_CONFIG_INITIAL_LOG_LEVEL,                              
                              APP_TIMER_CONFIG_LOG_ENABLED ?                                   
                                         APP_TIMER_CONFIG_LOG_LEVEL : NRF_LOG_SEVERITY_NONE);  

    static app_timer_t CONCAT_2(timer_id,_data) = {                                            
            .end_val = APP_TIMER_IDLE_VAL,                                                     
            NRF_LOG_INSTANCE_PTR_INIT(p_log, APP_TIMER_LOG_NAME, timer_id)                     
    };                         
                                                                
    static const app_timer_id_t timer_id = &CONCAT_2(timer_id,_data)


#define NRF_LOG_INSTANCE_REGISTER(_module_name, _inst_name, info_color, debug_color, _initial_lvl, compiled_lvl)
#define NRF_LOG_INSTANCE_PTR_INIT(_p_name, _module_name, _inst_name) 

---

#define _APP_TIMER_DEF(timer_id)   


#define NRF_LOG_INSTANCE_REGISTER(_module_name, _inst_name, info_color, debug_color, _initial_lvl, compiled_lvl);


    app_timer_t  task_loop_timer_id_data  =                                              
            .end_val = APP_TIMER_IDLE_VAL,                                                     
            NRF_LOG_INSTANCE_PTR_INIT(p_log, app_timer, timer_id)                     
 

#define NRF_LOG_INSTANCE_PTR_INIT(_p_name, _module_name, _inst_name) 

---




                


                                                                                             